# Excluded file from version control to safely store env vars, API keys ...
# After each edit rebuild the docker & update env.example to match this file

# Backend docker configuration
# React app URL for CORS configuration
FRONTEND_URL=http://localhost:3000
# Flask API endpoint URL
BACKEND_URL=http://localhost:5000
# Flask environment mode (development/production)
FLASK_ENV=development
# Enable Flask debug mode (1=on, 0=off)
FLASK_DEBUG=1

# Frontend amplify-cognito configuration
# AWS region where your Cognito User Pool is deployed (e.g., us-east-1, eu-west-2, ap-southeast-1)
REACT_APP_AWS_REGION=your_aws_region
# Cognito User Pool ID - format: region_xxxxxxxxx (e.g., eu-west-2_Ab1Cd2Ef3)
# Get from CloudFormation outputs or Cognito console
REACT_APP_USER_POOL_ID=your_user_pool_id
# Cognito User Pool App Client ID - format: 26-character alphanumeric string
# Get from CloudFormation outputs or Cognito console App clients tab
REACT_APP_USER_POOL_CLIENT_ID=your_client_id

# Honeycomb configuration (Observability)
# Get API key from Honeycomb.io account settings
HONEYCOMB_API_KEY=your_honeycomb_api_key
# Service identifier for traces
OTEL_SERVICE_NAME="backend-flask"
# Protocol for telemetry export
OTEL_EXPORTER_OTLP_PROTOCOL="http/protobuf"
# Honeycomb API endpoint
OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io
# Authentication header with API key (same as HONEYCOMB_API_KEY)
OTEL_EXPORTER_OTLP_HEADERS=x-honeycomb-team=your_honeycomb_api_key

# Frontend docker configuration
# Backend API URL for frontend calls
REACT_APP_BACKEND_URL=http://localhost:5000
# File watching for hot reload in Docker
CHOKIDAR_USEPOLLING=true
# Webpack file watching for hot reload
WATCHPACK_POLLING=true

# Postgres Docker Database configuration
# PostgreSQL username
POSTGRES_USER=postgres
# PostgreSQL password
POSTGRES_PASSWORD=password

# Rollbar configuration (Error Tracking)
# Get from Rollbar project settings
ROLLBAR_ACCESS_TOKEN=your_rollbar_access_token

# AWS X-Ray configuration (Distributed Tracing)
# AWS IAM user access key with X-Ray permissions
AWS_ACCESS_KEY_ID=your_aws_access_key_id
# AWS IAM user secret key
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
# AWS region for X-Ray service
AWS_REGION=your_aws_region
# X-Ray daemon container address
AWS_XRAY_DAEMON_ADDRESS=xray-daemon:2000
# Service name for X-Ray traces
AWS_XRAY_TRACING_NAME=cruddur-backend-flask
# X-Ray daemon URL
AWS_XRAY_URL=xray-daemon:2000

# Watchtower / CloudWatch configuration
# AWS region for CloudWatch (optional)
# AWS_DEFAULT_REGION=your_aws_region
